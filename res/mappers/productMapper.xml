<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="prod">


	<!--상품등록 테스트용 (이미지, 파일번호 빠짐) -->
	<insert id="addProduct">

		INSERT INTO PRODUCT
		(PROD_NO,BR_NO,PROD_NAME,PROD_PRICE,PROD_CATE_NO,PROD_CONTENT,FILE_No,
		PROD_IMG)
		VALUES(#{prodNo}, #{brNo}, #{prodName}, #{prodPrice},
		#{prodCateNo},#{prodContent},#{fileNo}, #{prodImg})



		<!-- INSERT INTO PRODUCT (PROD_NO,BR_NO,PROD_NAME,PROD_PRICE,PROD_CATE_NO,PROD_CONTENT,PROD_DATE,PROD_IMG,FILE_NO) 
			VALUES(#{prodNo}, #{brNo}, #{prodName}, #{prodPrice}, #{prodCate_No},#{prodContent},#{prodDate}, 
			#{prodImg}, #{fileNo}) -->
	</insert>

	<resultMap type="prodVO" id="prodMap">
		<id column="PROD_NO" property="prodNo" />
		<result column="BR_NO" property="brNo" />
		<result column="PROD_NAME" property="prodName" />
		<result column="PROD_PRICE" property="prodPrice" />
		<result column="PROD_CATE_NO" property="prodCateNo" />
		<result column="PROD_CONTENT" property="prodContent" />
		<result column="PROD_DATE" property="prodDate" />
		<result column="PROD_IMG" property="prodImg" />
		<result column="FILE_NO" property="fileNo" />
		<collection property="atchfileDetList"
			resultMap="atchFileMap" />
	</resultMap>

	<resultMap type="AtchFileDetailVO" id="atchFileMap">
		<result column="FILE_DET_NO" property="fileDetNo" />
	</resultMap>



	<select id="fileselectAll" resultType="AtchFileDetailVO">

		SELECT FILE_DET_NO,
		FILE_NO, FILE_PATH, ST_FILENM, ORIGIN_FILENM, FILE_EXT,
		FILE_CONTENTS,
		FILE_SIZE FROM
		FILE_DETAIL

	</select>

	<select id="getFileDetNo" resultType="AtchFileDetailVO">
		SELECT FILE_DET_NO FROM
		FILE_DETAIL WHERE FILE_NO = #{fileNo}

	</select>


	<!--전체상품조회 -->
	<select id="prodCountList" resultType="java.util.HashMap">


		SELECT A.* FROM (
		SELECT ROWNUM AS RNUM, B.* FROM(

		SELECT A.*
		FROM
		PRODUCT A
		ORDER BY PROD_NO DESC

		) B
		WHERE ROWNUM <![CDATA[<=]]>
		#{end}
		) A
		WHERE A.RNUM >= #{start}



	</select>

	<!--상품수정 -->
	<update id="updateProduct" parameterType="prodVO">

		UPDATE product
		SET
		prod_name = #{prodName},
		prod_content = #{prodContent},
		prod_price =
		#{prodPrice},
		br_no = #{brNo},
		prod_cate_no = #{prodCateNo}
		WHERE prod_no
		=#{prodNo}

	</update>

	<!-- 상품상세보기 -->
	<select id="getProduct" resultMap="prodMap">

		SELECT A.*, B.FILE_DET_NO
		FROM
		PRODUCT A
		LEFT OUTER JOIN FILE_DETAIL B ON A.FILE_NO = B.FILE_NO
		WHERE
		PROD_NO = #{prodNo}

	</select>
	<!--상품삭제 -->

	<delete id="deleteProduct" parameterType="prodVO">

		delete from product
		where prod_no =#{prodNo}

	</delete>
	<select id="prodSearch" resultType="java.util.HashMap">
		SELECT A.* FROM (
		SELECT ROWNUM AS RNUM, B.* FROM (
		SELECT
		p.*,
		g.grd_accr
		FROM PRODUCT p
		LEFT JOIN Grade g ON g.grd_no = #{grdNo}
		WHERE
		p.PROD_NAME LIKE '%' || #{search} || '%'
		<choose>
			<when test="sort == 'PROD_PRICE' and sortodr == 'asc'">
				ORDER BY CASE WHEN p.PROD_NAME LIKE '%' || #{search}
				|| '%' THEN
				p.PROD_PRICE END ASC
			</when>
			<when test="sort == 'PROD_PRICE' and sortodr == 'desc'">
				ORDER BY CASE WHEN p.PROD_NAME LIKE '%' || #{search}
				|| '%' THEN
				p.PROD_PRICE END DESC
			</when>
			<when test="sort == 'PROD_DATE' and sortodr == 'desc'">
				ORDER BY CASE WHEN p.PROD_NAME LIKE '%' || #{search}
				|| '%' THEN
				p.PROD_DATE END DESC
			</when>
			<!-- 여기에 다른 정렬 조건을 추가할 수 있습니다. -->
			<otherwise>
				ORDER BY CASE WHEN p.PROD_NAME LIKE '%' || #{search} ||
				'%' THEN
				p.PROD_PRICE END DESC
			</otherwise>
		</choose>
		) B
		WHERE ROWNUM <![CDATA[<=]]>
		#{end}
		) A
		WHERE A.RNUM >= #{start}
	</select>
	<select id="countList" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE PROD_NAME LIKE '%' || #{search} || '%'
	</select>

	<select id="cateList" resultType="java.util.HashMap">
		SELECT A.* FROM (
		SELECT ROWNUM AS RNUM, B.* FROM (
		<choose>
			<when test="cate gt 'A00' and cate lt 'A09'">
				SELECT
				p.*,
				g.grd_accr
				FROM PRODUCT p
				LEFT JOIN Grade g ON g.grd_no =
				#{grdNo}
				WHERE p.PROD_CATE_NO IN (
				SELECT COMM_CODE FROM COMM_CODE
				WHERE PARENT_CODE = #{cate}
				)
				<choose>
					<when test='sort == "PROD_PRICE" and sortOdr == "asc"'>
						ORDER BY p.PROD_PRICE ASC
					</when>
					<when test='sort == "PROD_PRICE" and sortOdr == "desc"'>
						ORDER BY p.PROD_PRICE DESC
					</when>
					<when test='sort == "PROD_DATE" and sortOdr == "desc"'>
						ORDER BY p.PROD_DATE DESC
					</when>
					<!-- 여기에 다른 정렬 조건을 추가할 수 있습니다. -->
					<otherwise>
						ORDER BY p.PROD_PRICE DESC
					</otherwise>
				</choose>
			</when>
			<otherwise>
				SELECT
				p.*,
				g.grd_accr
				FROM PRODUCT p
				LEFT JOIN Grade g ON g.grd_no =
				#{grdNo}
				WHERE p.PROD_CATE_NO = #{cate}
				<choose>
					<when test="sort == 'PROD_PRICE' and sortOdr == 'asc'">
						ORDER BY p.PROD_PRICE ASC
					</when>
					<when test="sort == 'PROD_PRICE' and sortOdr == 'desc'">
						ORDER BY p.PROD_PRICE DESC
					</when>
					<when test="sort == 'PROD_DATE' and sortOdr == 'desc'">
						ORDER BY p.PROD_DATE DESC
					</when>
					<!-- 여기에 다른 정렬 조건을 추가할 수 있습니다. -->
					<otherwise>
						ORDER BY p.PROD_PRICE DESC
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		) B
		WHERE ROWNUM <![CDATA[<=]]>
		#{end}
		) A
		WHERE A.RNUM >= #{start}
	</select>
	
	<select id="getBestProducts" resultType="java.util.HashMap"> 
	 SELECT * FROM
	 ( SELECT OD.PROD_NO, OD.PR_QTY, P.PROD_PRICE, P.PROD_NAME, P.PROD_IMG, P.FILE_NO, 
	 ROW_NUMBER() OVER 
	 (PARTITION BY OD.PROD_NO ORDER BY OD.PR_QTY DESC) as rn 
	 FROM ORD_DETAIL OD JOIN PRODUCT P ON OD.PROD_NO = P.PROD_NO ) 
	 WHERE rn = 1 ORDER BY PR_QTY DESC 
	 </select>

	<select id="getNewProducts" resultType="java.util.HashMap">
		 <![CDATA[
		select prod_no, prod_price, prod_name, prod_img, file_no
		from product
		where PROD_DATE >= SYSDATE-1
		order by PROD_DATE DESC
		]]>

	</select>

	<select id="getMainNewProducts" resultType="java.util.HashMap">

		<!-- SELECT A.PROD_NO, A.PROD_NAME, A.PROD_PRICE, A.TOTAL_QUANTITY, P.PROD_IMG 
			FROM (SELECT OD.PROD_NO, P.PROD_NAME, P.PROD_PRICE, SUM(OD.PR_QTY) AS TOTAL_QUANTITY 
			FROM ORD_DETAIL OD JOIN PRODUCT P ON OD.PROD_NO = P.PROD_NO GROUP BY OD.PROD_NO, 
			P.PROD_NAME, P.PROD_PRICE) A JOIN PRODUCT P ON A.PROD_NO = P.PROD_NO WHERE 
			ROWNUM <![CDATA[<=]]> 6 -->

		SELECT
		prod_no,
		prod_price,
		prod_name,
		prod_img, file_no,
		G.GRD_ACCR
		FROM
		product p
		JOIN GRADE G ON G.GRD_NO = #{grdNo}
		WHERE ROWNUM <![CDATA[<=]]>
		12
		ORDER BY PROD_DATE



	</select>

	<select id="getMainBestProducts" resultType="java.util.HashMap">

		SELECT
		A.PROD_NO,
		A.PROD_NAME,
		A.PROD_PRICE,
		A.GRD_ACCR,
		A.TOTAL_QUANTITY,
		P.PROD_IMG
		FROM
		(SELECT
		OD.PROD_NO,
		P.PROD_NAME,
		P.PROD_PRICE,
		G.GRD_ACCR,
		SUM(OD.PR_QTY) AS TOTAL_QUANTITY
		FROM
		ORD_DETAIL OD
		JOIN GRADE G ON
		G.GRD_NO = #{grdNo}
		JOIN PRODUCT P ON OD.PROD_NO = P.PROD_NO
		GROUP BY
		OD.PROD_NO, P.PROD_NAME, P.PROD_PRICE, G.GRD_ACCR) A
		JOIN
		PRODUCT P ON
		A.PROD_NO = P.PROD_NO
		WHERE ROWNUM <![CDATA[<=]]>
		6



	</select>
	<select id="cateCountList" resultType="int">
		<choose>
			<when test="cate gt 'A00' and cate lt 'A09'">
				SELECT COUNT(*)
				FROM PRODUCT
				WHERE PROD_CATE_NO IN (
				SELECT COMM_CODE
				FROM COMM_CODE
				WHERE PARENT_CODE = #{cate}
				)
			</when>
			<otherwise>
				SELECT COUNT(*)
				FROM PRODUCT
				WHERE PROD_CATE_NO = #{cate}
			</otherwise>
		</choose>
	</select>
	<select id="getProdDetailByOrder" resultType="prodVO">
		SELECT P.*, C.comm_code_name, G.grd_accr
		<if test="numList != null and numList.size() > 0">
			, CART.CART_QTY
		</if>
		FROM PRODUCT P
		LEFT JOIN COMM_CODE C ON P.PROD_CATE_NO = C.COMM_CODE
		LEFT JOIN "GRADE" G ON G.GRD_NO = #{grdNo}

		<if test="numList != null and numList.size() > 0">
			JOIN CART ON CART.PROD_NO IN
			<foreach item="prodNo" collection="numList" open="("
				separator="," close=")">
				#{prodNo}
			</foreach>
		</if>

		WHERE P.PROD_NO IN
		<choose>
			<when test="numList != null and numList.size() > 0">
				<foreach item="prodNo" collection="numList" open="("
					separator="," close=")">
					#{prodNo}
				</foreach>
			</when>
			<otherwise>
				(#{prodNo})
			</otherwise>
		</choose>
		<if test="numList != null and numList.size() > 0">
			AND CART.ACC_NO = #{accNo}
			AND CART.PROD_NO = P.PROD_NO
		</if>
	</select>

	<select id="adminProdSearch" resultType="java.util.HashMap">
		SELECT PROD_NO, PROD_IMG, PROD_NAME, BR_NO, PROD_CONTENT, PROD_PRICE,
		PROD_CATE_NO, PROD_DATE
		FROM PRODUCT
		WHERE 1=1
		<choose>
			<when test='cate == "prod_name"'>
				AND (PROD_NAME LIKE '%' || #{search} || '%')
			</when>
			<when test='cate == "br_no"'>
				AND (BR_NO = #{search})
			</when>
			<when test='cate == "prod_cate_no"'>
				AND (PROD_CATE_NO = #{search})
			</when>
			<!-- 추가: 필요에 따라 다른 경우를 처리하기 위한 otherwise 블록 -->
			<otherwise>
				AND 1=0 <!-- 모든 조건이 걸리지 않으면 결과가 없도록 함 -->
			</otherwise>
		</choose>
	</select>

	<select id="admincountList" resultType="int">

		SELECT COUNT(*) FROM PRODUCT

		<if test='search != null and search != ""'>
			<choose>
				<when test='cate == "PROD_NAME"'>
					AND PROD_NAME LIKE '%' || #{search} || '%'
				</when>
				<when test='cate == "BR_NO"'>
					AND BR_NO = #{search}
				</when>
				<when test='cate == "PROD_CATE_NO"'>
					AND PROD_CATE_NO = #{search}
				</when>

			</choose>
		</if>

	</select>

</mapper>